#!/bin/bash -e

# Default git script to run:
#   git pull
#   git map fetch --all
#   git map submodule update
# on all of your git repo's within the same parent directory.

# Copyright Â© 2017 JPCDI, JPartain89 and Justin Partain
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Program information
PROGRAM_NAME="git-automap"
VERSION="1.5.5"

if [[ ! -e "$(command -v allunix)" ]]; then
    echo "AllUnix file is missing."
    curl -fsSL http://bit.ly/jp_allunix | bash
fi

source allunix
git_local_bin_install

# Installing git-map dependency
command -v git-map 1>/dev/null 2>&1 || {
    (
        REPO_NAME="git-automap/git-map"
        PROGRAM_NAME="git-map"
        source allunix
        local_bin_install
    )
}

function USAGE {
cat <<- EOF
${PROGRAM_NAME}

USAGE :
      : run ${PROGRAM_NAME} from within a git repo.
      : Calls git pull, fetch and submodule update --init --recursive

-h | --help     :    Shows this info
-V | --version  :    Shows version information
EOF
    EXIT_NORM
}

git rev-parse

while [ $# -ge 1 ]; do
    case "$1" in
        -h | --help ) USAGE; exit 0;;
        -V | --version ) HELP_VERSION; exit 0;;
        * ) USAGE; exit 1;;
    esac
done

trap 'EXIT_NORM; exit 1' SIGHUP SIGINT SIGTERM

function main {
    git map pull 2>&1 &&
    echo ""
    git map fetch --all 2>&1 &&
    echo ""
    git map submodule update --init --recursive 2>&1
}

main
